version: '3.8'

services:
  user-db:
    image: mysql:8.0
    container_name: user-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-ppassword" ]
      interval: 10s
      timeout: 5s
      retries: 5

  order-db:
    image: mysql:8.0
    container_name: order-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order_db
      MYSQL_USER: order
      MYSQL_PASSWORD: password
    ports:
      - "3308:3306"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "order", "-ppassword" ]
      interval: 10s
      timeout: 5s
      retries: 5

  product-db:
    image: mysql:8.0
    container_name: product-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: product_db
      MYSQL_USER: product
      MYSQL_PASSWORD: password
    ports:
      - "3309:3306"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "product", "-ppassword" ]
      interval: 10s
      timeout: 5s
      retries: 5



  user-service:
    image: neman1234/service-user-ms:1.0.47bab6c
    build:
      context: ./user-ms/docker
      dockerfile: Dockerfile
    expose:
      - "4020"
    depends_on:
      user-db:
        condition: service_healthy
    environment:
      DB_CONNECTION_IP: user-db
      DB_CONNECTION_PORT: 3306
      DB_CONNECTION_USERNAME: user
      DB_CONNECTION_PASSWORD: password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4020/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  order-service:
    image: neman1234/service-order-ms:1.0.47bab6c
    build:
      context: ./order-ms/docker
      dockerfile: Dockerfile
    expose:
      - "4030"
    depends_on:
      order-db:
        condition: service_healthy

    environment:
      DB_CONNECTION_IP: order-db
      DB_CONNECTION_PORT: 3306
      DB_CONNECTION_USERNAME: order
      DB_CONNECTION_PASSWORD: password
      USER_SERVICE_URL: http://nginx:4020
      PRODUCT_SERVICE_URL: http://nginx:4010
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4030/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  product-service:
    image: neman1234/service-product-ms:1.0.47bab6c
    build:
       context: ./product-ms/docker
       dockerfile: Dockerfile
    expose:
      - "4010"
    depends_on:
      product-db:
        condition: service_healthy
    environment:
      DB_CONNECTION_IP: product-db
      DB_CONNECTION_PORT: 3306
      DB_CONNECTION_USERNAME: product
      DB_CONNECTION_PASSWORD: password
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4010/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    depends_on:
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    ports:
      - "4020:4020"
      - "4010:4010"
      - "4030:4030"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
