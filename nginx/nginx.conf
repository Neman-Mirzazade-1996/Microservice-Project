# Nginx load balancer configuration

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # DNS resolver for dynamic upstream resolution
    resolver 127.0.0.11 valid=30s;

    server {
        listen 80;

        # Public endpoints (no authentication required)
        location /api/v1/users/auth/ {
            set $user_service "user-service-1:4020";
            proxy_pass http://$user_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Keycloak routes
        location /auth/ {
            set $keycloak_service "my-keycloak:8080";
            proxy_pass http://$keycloak_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host:8080;
            proxy_set_header X-Forwarded-Port 8080;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Secured routes - pass through Spring Cloud Gateway for authorization
        location /api/v1/users/ {
            set $gateway_service "spring-cloud-gateway:8080";
            proxy_pass http://$gateway_service/user-service/api/v1/users/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/v1/products/ {
            set $gateway_service "spring-cloud-gateway:8080";
            proxy_pass http://$gateway_service/product-service/api/v1/products/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/v1/orders/ {
            set $gateway_service "spring-cloud-gateway:8080";
            proxy_pass http://$gateway_service/order-service/api/v1/orders/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Gateway actuator and management endpoints
        location /actuator/ {
            set $gateway_service "spring-cloud-gateway:8080";
            proxy_pass http://$gateway_service/actuator/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /health {
            return 200 'healthy\n';
        }
    }
}